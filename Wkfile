'use strict'

// const publishTask = wk.require.extra('publish-task')
const packageTask = wk.require.extra('package-task')

// namespace('test', function() {
//   task('default', [ 'test:api', 'test:task', 'test:hook' ])

//   taskProcess('api' , 'mocha test/api.js --color' , { async: true, visible: false })
//   taskProcess('task', 'mocha test/task.js --color', { async: true, visible: false })
// })

packageTask('pkg', function() {

  const version = require('./package.json').version
  this.name = `workflow-cli-${version}`

  this.filelist.include('./bin/**/*')
  this.filelist.include('./lib/**/*')
  this.filelist.include('./test/**/*')
  this.filelist.include('./package.json')
  this.filelist.include('./Wkfile')
  this.filelist.include('./README.md')

  this.targets = [ 'zip' ]

  const self = this

  task('publish', { async: true }, function() {
    wk.exec(`npm publish ${self.getPackagePath()}.tar.gz`)
      .catch(this.fail)
      .done(this.complete)
  })

})


publishTask('deploy', function() {
  this.remote = 'origin'
})

// const tsk = task('hello', { argv: { who: 'Marc' }, argv_config: true }, function(params) {
//   console.log(params.who, ':', params.message)
// })

// tsk.argv_config
// .option('who', {
//   defaultValue: 'John'
// })
// .index('who', 1)
// .option('message', {
//   defaultValue: 'Hello World'
// })


// task('message', function() {
//   console.log('message')
// })

// task('message0', { async: true }, function() {
//   setTimeout(() => {
//     console.log('message0')
//     this.complete()
//   }, 1000)
// })

// task('message1', function(params) {
//   console.log(`message1 ${params.name}`)
// })

// task('message2', function() {
//   console.log('message2')
// })